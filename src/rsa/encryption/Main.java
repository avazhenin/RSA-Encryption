/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rsa.encryption;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.io.UnsupportedEncodingException;
import java.math.BigInteger;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.charset.Charset;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;

/**
 *
 * @author vazhenin
 */
public class Main extends javax.swing.JFrame {

    RSAEncryption rsa = new RSAEncryption();
    Toolkit defaultToolkit = Toolkit.getDefaultToolkit();
    Clipboard systemClipboard = defaultToolkit.getSystemClipboard();
    String delimiter = "0101010101010101010101";

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea_to_encrypt = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea_encrypted = new javax.swing.JTextArea();
        jButton8 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea_to_decrypt = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea_decrypted = new javax.swing.JTextArea();
        jButton9 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_privkey = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea_pubkey = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea_modulus = new javax.swing.JTextArea();
        jButton7 = new javax.swing.JButton();
        jTextField_bits = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setDoubleBuffered(true);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Text to encrypt"));
        jPanel4.setToolTipText("test");

        jTextArea_to_encrypt.setColumns(20);
        jTextArea_to_encrypt.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jTextArea_to_encrypt.setLineWrap(true);
        jTextArea_to_encrypt.setRows(5);
        jScrollPane4.setViewportView(jTextArea_to_encrypt);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Encrypted text"));
        jPanel5.setToolTipText("test");

        jTextArea_encrypted.setColumns(20);
        jTextArea_encrypted.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jTextArea_encrypted.setLineWrap(true);
        jTextArea_encrypted.setRows(5);
        jScrollPane5.setViewportView(jTextArea_encrypted);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
        );

        jButton8.setText("Encrypt");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Encrypt", jPanel1);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Text to decrypt"));
        jPanel6.setToolTipText("test");

        jTextArea_to_decrypt.setColumns(20);
        jTextArea_to_decrypt.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jTextArea_to_decrypt.setLineWrap(true);
        jTextArea_to_decrypt.setRows(5);
        jScrollPane6.setViewportView(jTextArea_to_decrypt);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Decrypted text"));
        jPanel7.setToolTipText("test");

        jTextArea_decrypted.setColumns(20);
        jTextArea_decrypted.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jTextArea_decrypted.setLineWrap(true);
        jTextArea_decrypted.setRows(5);
        jScrollPane7.setViewportView(jTextArea_decrypted);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
        );

        jButton9.setText("Decrypt");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton9)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton9)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Decrypt", jPanel2);

        jTextArea_privkey.setColumns(20);
        jTextArea_privkey.setLineWrap(true);
        jTextArea_privkey.setRows(5);
        jTextArea_privkey.setText("43144552193680972018631213055556166378835250283693058976786454499001833396199482761657717701539144541782817272524887236004718730526213730531950898916510362760070305687851303800086998303918277197206702026796829605607606898225171907664170068780856111901440633616238791810428425133955582133943805292810835311208808260257577221960952944623396772197638990248507098120985398378663096291143850569167167702827112662810218083154763185730435652407559927780457110992465429319725740370368408482644765335463834742441340322223141313603690730408979778300848552738687078241399012593554037198492230099549295902347115811460780838940163828298970689547471768524511112095742475780823457639290615930868150654360450102971153688454464255487476832532772755859601435153591035660801854546671178738420117519893017961713491533336151249068494945979760321955975772885617949608817322490593889707157773524108826078684927527252763952746413466302081306719128753448421012011361088466045000173931109712106688945879561436849469294392610809620719847646695853437686372611939625117097888602462143277663656204469059761045029127481260730782449644151396325035568849168006225444978757511382737758716024926456211460391584217150573454969088382550047903684824344885683290032506767");
        jScrollPane1.setViewportView(jTextArea_privkey);

        jLabel1.setText("Private key");

        jLabel2.setText("Public key");

        jTextArea_pubkey.setColumns(20);
        jTextArea_pubkey.setLineWrap(true);
        jTextArea_pubkey.setRows(5);
        jTextArea_pubkey.setText("27622964008017631856143722343646653854596957988874717143937615666823038011306073157308948974171423413156279800407241488093747632247721101901924786057004744069447729675595673717159030456985172422039289623520540247912153382631062956024705476627053270914623166969121674767266169174619812671871285882196304718452616865185992558111153828425754583255276806293150568625141389710474349330468872878781018049777501664958955222160321993693536562453146558741970471604461431204719224690413976386511037163081678210728827712540464228508122977960651676755136936525218102448436320770491961632324615230971221828058247719501083623574427");
        jScrollPane2.setViewportView(jTextArea_pubkey);

        jLabel3.setText("Modulus");

        jTextArea_modulus.setColumns(20);
        jTextArea_modulus.setLineWrap(true);
        jTextArea_modulus.setRows(5);
        jTextArea_modulus.setText("774279866744902781175598877292437418970071535907905135703062395405870619477646717182599013380880501704892426809092602357582894548194307454884661211478012086499096375713847705664808816789950154016314666808358512757616036036754405189259568726726159926203922419518319383058052416275971944562234872057178702553434844227100496950660822481914241272753634528230770466848072130308633825285317916101717469558243603518227974007661799193819737632433589093299257192078300134050710551678507818801680566603318800316726180486747007120931433086459115669894875587994746843491049111382377723864867432498393009855381974299062513396854090220364531045960989707229436342698222724704147076287660411436522727030124404536520473480521040889888680974760641685063767832355218221242940749154026233379089086303006198222445945388371478546385705297563828852019498999144440418504006148002249450266974809774435783264975763152749306675721818623995169543243698582563456543640884648935934846821929282120867690184396276593386965755795888689087193870465635970411915693777045559736699166841164490739109558890531528370731373702295377908676672894297832896744051774387117118092236967337400047321142586530957661408918531422487802171545671175995564957186693685433584178843563349");
        jScrollPane3.setViewportView(jTextArea_modulus);

        jButton7.setText("Generate keys");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jTextField_bits.setText("2048");
        jTextField_bits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_bitsActionPerformed(evt);
            }
        });

        jLabel4.setText("Bit");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jTextField_bits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addGap(43, 43, 43)
                                .addComponent(jButton7)))
                        .addGap(0, 443, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_bits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Keys generation", jPanel3);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabbedPane1))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 426, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_bitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_bitsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_bitsActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        int bits = Integer.parseInt(jTextField_bits.getText());

        RSAUtilities CompanyA = new RSAUtilities(bits);
        BigInteger[] publicKeyCompanyA = CompanyA.getPublicKey(bits);
        BigInteger privateKeyCompanyA = CompanyA.getPrivateKey(publicKeyCompanyA[0], CompanyA.phi);

        // write public key
        jTextArea_pubkey.setText(publicKeyCompanyA[0].toString());

        // write mobulus
        jTextArea_modulus.setText(publicKeyCompanyA[1].toString());

        // write private key
        jTextArea_privkey.setText(privateKeyCompanyA.toString());
    }//GEN-LAST:event_jButton7ActionPerformed

    /* encrypt message */
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        BigInteger[] public_modulus = new BigInteger[2];
        public_modulus[0] = new BigInteger(jTextArea_pubkey.getText().trim());
        public_modulus[1] = new BigInteger(jTextArea_modulus.getText().trim());
        String text = jTextArea_to_encrypt.getText().trim();
        String encryptedLong = "";
        int maxbytes = Integer.parseInt(jTextField_bits.getText().trim()) / 8; // usually 256

        int readBytes = 0;
        int strPos = 0;
        String textPiece = "";
        while (strPos < text.length()) {
            String character = text.substring(strPos, strPos + 1);
            int charBytesNum = character.getBytes().length; // number of bytes character consist of
            textPiece += character;
            readBytes += charBytesNum; // count read bytes
            strPos++; // incsrement character position
            if (readBytes >= maxbytes - 1 || strPos >= text.length()) {
                readBytes = 0;
                // if it's not the end of the file, we put delimiter
                encryptedLong += (new RSAUtilities().encrypt(textPiece, public_modulus)).toString();
                if (strPos < text.length()) {
                    encryptedLong += delimiter;
                }
//                System.out.println(textPiece);
                textPiece = "";
            }
        }

        jTextArea_encrypted.setText(encryptedLong);

    }//GEN-LAST:event_jButton8ActionPerformed

    /* decrypt message */
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        BigInteger[] public_modulus = new BigInteger[2];
        public_modulus[0] = new BigInteger(jTextArea_pubkey.getText().trim());
        public_modulus[1] = new BigInteger(jTextArea_modulus.getText().trim());

        String textToDecrypt = jTextArea_to_decrypt.getText().trim();
        String decrypted_text = "";
        if (textToDecrypt.indexOf(delimiter) != -1) {
            int pos = 1;
            while (pos != -1) {
                pos = textToDecrypt.indexOf(delimiter);
                pos = (pos == -1) ? textToDecrypt.length() : pos;
//                System.out.println(textToDecrypt.substring(0, pos));
                decrypted_text += new RSAUtilities()
                        .decrypt(
                                new BigInteger(textToDecrypt.substring(0, pos)),
                                new BigInteger(jTextArea_privkey.getText().trim()),
                                public_modulus);
//                System.out.println(pos);
//                System.out.println(textToDecrypt.length());
                if (pos < textToDecrypt.length()) {
                    textToDecrypt = textToDecrypt.substring(pos + delimiter.length(), textToDecrypt.length());
                } else {
                    pos = -1;
                    jTextArea_decrypted.setText(decrypted_text);
                }
            }
        } else {

            decrypted_text = new RSAUtilities()
                    .decrypt(
                            new BigInteger(textToDecrypt),
                            new BigInteger(jTextArea_privkey.getText().trim()),
                            public_modulus);
            jTextArea_decrypted.setText(decrypted_text);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    String substrBytePos(String text, int pos, int length) {
        byte[] btext = text.getBytes();
        byte[] b = new byte[length];
        for (int i = 0; i < length; i++) {
            b[i] = btext[pos + i];
        }
        return new String(b);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            Main.setDefaultLookAndFeelDecorated(true);

            System.setProperty("sun.awt.noerasebackground", "true");
        } catch (Exception ex) {
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (Exception e) {
                    e.printStackTrace();
                }
                new Main().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea_decrypted;
    private javax.swing.JTextArea jTextArea_encrypted;
    private javax.swing.JTextArea jTextArea_modulus;
    private javax.swing.JTextArea jTextArea_privkey;
    private javax.swing.JTextArea jTextArea_pubkey;
    private javax.swing.JTextArea jTextArea_to_decrypt;
    private javax.swing.JTextArea jTextArea_to_encrypt;
    private javax.swing.JTextField jTextField_bits;
    // End of variables declaration//GEN-END:variables

    void copyToClipboard(String text) {
        systemClipboard.setContents(new StringSelection(text), null);
    }

    String copyFromClipboard() {
        Object text = new Object();
        text = systemClipboard.getContents(DataFlavor.stringFlavor);
        return text.toString();
    }

}
